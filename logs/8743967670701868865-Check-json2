Test: mjsunit/json2
Flags: --test /b/s/w/ir/test/mjsunit/mjsunit.js /b/s/w/ir/test/mjsunit/json2.js --isolate /b/s/w/ir/test/mjsunit/mjsunit.js /b/s/w/ir/test/mjsunit/json2.js --random-seed=-1206385236 --nohard-abort --testing-d8-test-runner --stress-background-compile --stress-wasm-code-gc --allow-natives-syntax --expose-externalize-string
Command: out/build/d8 --test test/mjsunit/mjsunit.js test/mjsunit/json2.js --isolate test/mjsunit/mjsunit.js test/mjsunit/json2.js --random-seed=-1206385236 --nohard-abort --testing-d8-test-runner --stress-background-compile --stress-wasm-code-gc --allow-natives-syntax --expose-externalize-string
Variant: stress_js_bg_compile_wasm_code_gc
Shard: 1:7

GN arguments:
dcheck_always_on = false
is_component_build = false
is_debug = false
is_tsan = true
target_cpu = "x64"
use_remoteexec = true
v8_enable_google_benchmark = true
v8_enable_test_features = true

Trigger flake bisect on command line:
bb add v8/try.triggered/v8_flako -p 'bisect_builder_group="client.v8"' -p 'bisect_buildername="V8 Linux64 TSAN - builder"' -p 'revision="5742e8f05cc68e46cd47fbef7e9352ff0dac9e7c"' -p 'swarming_dimensions=["cpu:x86-64", "pool:chromium.tests", "os:Ubuntu-22.04"]' -p 'isolated_name="bot_default"' -p 'test_name="mjsunit/json2"' -p 'timeout_sec=60' -p 'total_timeout_sec=120' -p 'variant="stress_js_bg_compile_wasm_code_gc"' -p 'extra_args=["--isolates"]'

Local flake reproduction on command line:
tools/run-tests.py --outdir=SET_OUTDIR_HERE --variants=stress_js_bg_compile_wasm_code_gc --random-seed-stress-count=1000000 --total-timeout-sec=120 --exit-after-n-failures=1 --isolates mjsunit/json2

Run #1
Exit code: 66 [0x42]
Result: FAIL
Expected outcomes: PASS
Duration: 01:40:196

Crash Type:
Data race
READ 8

Crash State:
std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*)
__clear
clear

Stderr:
==================
WARNING: ThreadSanitizer: data race (pid=481147)
  Read of size 8 at 0x725c000001d8 by thread T22 (mutexes: write M0):
    #0 std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*) third_party/libc++/src/include/vector:951:38 (d8+0x17957ac) (BuildId: a7a0130d592b7ef3)
    #1 __clear third_party/libc++/src/include/vector:947:5 (d8+0x1795714) (BuildId: a7a0130d592b7ef3)
    #2 clear third_party/libc++/src/include/vector:744:5 (d8+0x1795714)
    #3 v8::internal::wasm::StackPool::ReleaseFinishedStacks() src/wasm/stacks.cc:75:53 (d8+0x1795714)
    #4 v8::internal::Heap::GarbageCollectionEpilogueInSafepoint(v8::internal::GarbageCollector) src/heap/heap.cc:1272:43 (d8+0xaad44e) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*) src/heap/heap.cc:2419:3 (d8+0xab704a) (BuildId: a7a0130d592b7ef3)
    #6 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1::operator()() const src/heap/heap.cc:1764:9 (d8+0xad868b) (BuildId: a7a0130d592b7ef3)
    #7 void heap::base::Stack::SetMarkerAndCallbackImpl<v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1>(heap::base::Stack*, void*, void const*) src/heap/base/stack.h:176:5 (d8+0xad8119) (BuildId: a7a0130d592b7ef3)
    #8 PushAllRegistersAndIterateStack push_registers_asm.cc (d8+0x1996cf6) (BuildId: a7a0130d592b7ef3)
    #9 SetMarkerIfNeededAndCallback<(lambda at ../../src/heap/heap.cc:1728:40)> src/heap/base/stack.h:82:7 (d8+0xaaecc3) (BuildId: a7a0130d592b7ef3)
    #10 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) src/heap/heap.cc:1728:11 (d8+0xaaecc3)
    #11 CollectAllGarbage src/heap/heap.cc:1402:3 (d8+0xab1916) (BuildId: a7a0130d592b7ef3)
    #12 v8::internal::Heap::FinalizeIncrementalMarkingAtomically(v8::internal::GarbageCollectionReason) src/heap/heap.cc:3985:3 (d8+0xab1916)
    #13 v8::internal::IncrementalMarking::AdvanceAndFinalizeIfComplete() src/heap/incremental-marking.cc:706:13 (d8+0xae29b7) (BuildId: a7a0130d592b7ef3)
    #14 v8::internal::IncrementalMarkingJob::Task::RunInternal() src/heap/incremental-marking-job.cc:137:34 (d8+0xade12c) (BuildId: a7a0130d592b7ef3)
    #15 Run src/tasks/cancelable-task.h:155:7 (d8+0x720487) (BuildId: a7a0130d592b7ef3)
    #16 non-virtual thunk to v8::internal::CancelableTask::Run() src/tasks/cancelable-task.h (d8+0x720487)
    #17 v8::platform::DefaultPlatform::PumpMessageLoop(v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:173:9 (d8+0x29e1ff5) (BuildId: a7a0130d592b7ef3)
    #18 v8::platform::PumpMessageLoop(v8::Platform*, v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:81:51 (d8+0x29e1ea7) (BuildId: a7a0130d592b7ef3)
    #19 v8::(anonymous namespace)::ProcessMessages(v8::Isolate*, std::__Cr::function<v8::platform::MessageLoopBehavior ()> const&) src/d8/d8.cc:5439:9 (d8+0x7174df) (BuildId: a7a0130d592b7ef3)
    #20 CompleteMessageLoop src/d8/d8.cc:5492:10 (d8+0x71142b) (BuildId: a7a0130d592b7ef3)
    #21 v8::Shell::FinishExecuting(v8::Isolate*, v8::Global<v8::Context> const&) src/d8/d8.cc:5496:8 (d8+0x71142b)
    #22 v8::SourceGroup::ExecuteInThread() src/d8/d8.cc:4551:9 (d8+0x711e11) (BuildId: a7a0130d592b7ef3)
    #23 v8::SourceGroup::IsolateThread::Run() src/d8/d8.h:117:35 (d8+0x7196a3) (BuildId: a7a0130d592b7ef3)
    #24 NotifyStartedAndRun src/base/platform/platform.h:612:5 (d8+0x29e0139) (BuildId: a7a0130d592b7ef3)
    #25 v8::base::ThreadEntry(void*) src/base/platform/platform-posix.cc:1191:11 (d8+0x29e0139)

  Previous write of size 8 at 0x725c000001d8 by main thread (mutexes: write M1):
    #0 std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*) third_party/libc++/src/include/vector:954:18 (d8+0x1795878) (BuildId: a7a0130d592b7ef3)
    #1 __clear third_party/libc++/src/include/vector:947:5 (d8+0x1795714) (BuildId: a7a0130d592b7ef3)
    #2 clear third_party/libc++/src/include/vector:744:5 (d8+0x1795714)
    #3 v8::internal::wasm::StackPool::ReleaseFinishedStacks() src/wasm/stacks.cc:75:53 (d8+0x1795714)
    #4 v8::internal::Heap::GarbageCollectionEpilogueInSafepoint(v8::internal::GarbageCollector) src/heap/heap.cc:1272:43 (d8+0xaad44e) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*) src/heap/heap.cc:2419:3 (d8+0xab704a) (BuildId: a7a0130d592b7ef3)
    #6 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1::operator()() const src/heap/heap.cc:1764:9 (d8+0xad868b) (BuildId: a7a0130d592b7ef3)
    #7 void heap::base::Stack::SetMarkerAndCallbackImpl<v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1>(heap::base::Stack*, void*, void const*) src/heap/base/stack.h:176:5 (d8+0xad8119) (BuildId: a7a0130d592b7ef3)
    #8 PushAllRegistersAndIterateStack push_registers_asm.cc (d8+0x1996cf6) (BuildId: a7a0130d592b7ef3)
    #9 SetMarkerIfNeededAndCallback<(lambda at ../../src/heap/heap.cc:1728:40)> src/heap/base/stack.h:82:7 (d8+0xaaecc3) (BuildId: a7a0130d592b7ef3)
    #10 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) src/heap/heap.cc:1728:11 (d8+0xaaecc3)
    #11 CollectAllGarbage src/heap/heap.cc:1402:3 (d8+0xab1916) (BuildId: a7a0130d592b7ef3)
    #12 v8::internal::Heap::FinalizeIncrementalMarkingAtomically(v8::internal::GarbageCollectionReason) src/heap/heap.cc:3985:3 (d8+0xab1916)
    #13 v8::internal::IncrementalMarking::AdvanceAndFinalizeIfComplete() src/heap/incremental-marking.cc:706:13 (d8+0xae29b7) (BuildId: a7a0130d592b7ef3)
    #14 v8::internal::IncrementalMarkingJob::Task::RunInternal() src/heap/incremental-marking-job.cc:137:34 (d8+0xade12c) (BuildId: a7a0130d592b7ef3)
    #15 Run src/tasks/cancelable-task.h:155:7 (d8+0x720487) (BuildId: a7a0130d592b7ef3)
    #16 non-virtual thunk to v8::internal::CancelableTask::Run() src/tasks/cancelable-task.h (d8+0x720487)
    #17 v8::platform::DefaultPlatform::PumpMessageLoop(v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:173:9 (d8+0x29e1ff5) (BuildId: a7a0130d592b7ef3)
    #18 v8::platform::PumpMessageLoop(v8::Platform*, v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:81:51 (d8+0x29e1ea7) (BuildId: a7a0130d592b7ef3)
    #19 v8::(anonymous namespace)::ProcessMessages(v8::Isolate*, std::__Cr::function<v8::platform::MessageLoopBehavior ()> const&) src/d8/d8.cc:5439:9 (d8+0x7174df) (BuildId: a7a0130d592b7ef3)
    #20 CompleteMessageLoop src/d8/d8.cc:5492:10 (d8+0x71142b) (BuildId: a7a0130d592b7ef3)
    #21 v8::Shell::FinishExecuting(v8::Isolate*, v8::Global<v8::Context> const&) src/d8/d8.cc:5496:8 (d8+0x71142b)
    #22 v8::Shell::RunMainIsolate(v8::Isolate*, bool) src/d8/d8.cc:5394:8 (d8+0x7172c1) (BuildId: a7a0130d592b7ef3)
    #23 v8::Shell::RunMain(v8::Isolate*, bool) src/d8/d8.cc:5300:18 (d8+0x716e15) (BuildId: a7a0130d592b7ef3)
    #24 v8::Shell::Main(int, char**) src/d8/d8.cc:6162:18 (d8+0x718dd5) (BuildId: a7a0130d592b7ef3)
    #25 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Location is heap block of size 824 at 0x725c00000000 allocated by main thread:
    #0 operator new(unsigned long) /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_new_delete.cpp:64:3 (d8+0x6de0f2) (BuildId: a7a0130d592b7ef3)
    #1 v8::internal::wasm::WasmEngine::InitializeOncePerProcess() src/wasm/wasm-engine.cc:1968:23 (d8+0x188d5d8) (BuildId: a7a0130d592b7ef3)
    #2 v8::internal::V8::Initialize() src/init/v8.cc:239:3 (d8+0xc314f2) (BuildId: a7a0130d592b7ef3)
    #3 v8::V8::Initialize(int) src/api/api.cc:6422:3 (d8+0x759a49) (BuildId: a7a0130d592b7ef3)
    #4 Initialize include/v8-initialization.h:120:12 (d8+0x7183c5) (BuildId: a7a0130d592b7ef3)
    #5 v8::Shell::Main(int, char**) src/d8/d8.cc:5974:3 (d8+0x7183c5)
    #6 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Mutex M0 (0x7238000070a0) created at:
    #0 pthread_mutex_init /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1316:3 (d8+0x65edf3) (BuildId: a7a0130d592b7ef3)
    #1 InitializeRecursiveNativeHandle src/base/platform/mutex.cc:112:12 (d8+0x29d867a) (BuildId: a7a0130d592b7ef3)
    #2 v8::base::RecursiveMutex::RecursiveMutex() src/base/platform/mutex.cc:187:3 (d8+0x29d867a)
    #3 v8::internal::IsolateSafepoint::IsolateSafepoint(v8::internal::Heap*) src/heap/safepoint.cc:29:19 (d8+0xb8c528) (BuildId: a7a0130d592b7ef3)
    #4 make_unique<v8::internal::IsolateSafepoint, v8::internal::Heap *> third_party/libc++/src/include/__memory/unique_ptr.h:620:30 (d8+0xaa4c7d) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::Heap() src/heap/heap.cc:261:18 (d8+0xaa4c7d)
    #6 v8::internal::Isolate::Isolate(v8::internal::IsolateGroup*) src/execution/isolate.cc:3907:10 (d8+0x9c8812) (BuildId: a7a0130d592b7ef3)
    #7 Allocate src/execution/isolate.cc:3847:40 (d8+0x9c63ac) (BuildId: a7a0130d592b7ef3)
    #8 v8::internal::Isolate::New() src/execution/isolate.cc:3837:34 (d8+0x9c63ac)
    #9 Allocate src/api/api.cc:9692:37 (d8+0x7663c7) (BuildId: a7a0130d592b7ef3)
    #10 v8::Isolate::New(v8::Isolate::CreateParams const&) src/api/api.cc:9798:25 (d8+0x7663c7)
    #11 v8::SourceGroup::ExecuteInThread() src/d8/d8.cc:4518:22 (d8+0x711981) (BuildId: a7a0130d592b7ef3)
    #12 v8::SourceGroup::IsolateThread::Run() src/d8/d8.h:117:35 (d8+0x7196a3) (BuildId: a7a0130d592b7ef3)
    #13 NotifyStartedAndRun src/base/platform/platform.h:612:5 (d8+0x29e0139) (BuildId: a7a0130d592b7ef3)
    #14 v8::base::ThreadEntry(void*) src/base/platform/platform-posix.cc:1191:11 (d8+0x29e0139)

  Mutex M1 (0x7238000000a0) created at:
    #0 pthread_mutex_init /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1316:3 (d8+0x65edf3) (BuildId: a7a0130d592b7ef3)
    #1 InitializeRecursiveNativeHandle src/base/platform/mutex.cc:112:12 (d8+0x29d867a) (BuildId: a7a0130d592b7ef3)
    #2 v8::base::RecursiveMutex::RecursiveMutex() src/base/platform/mutex.cc:187:3 (d8+0x29d867a)
    #3 v8::internal::IsolateSafepoint::IsolateSafepoint(v8::internal::Heap*) src/heap/safepoint.cc:29:19 (d8+0xb8c528) (BuildId: a7a0130d592b7ef3)
    #4 make_unique<v8::internal::IsolateSafepoint, v8::internal::Heap *> third_party/libc++/src/include/__memory/unique_ptr.h:620:30 (d8+0xaa4c7d) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::Heap() src/heap/heap.cc:261:18 (d8+0xaa4c7d)
    #6 v8::internal::Isolate::Isolate(v8::internal::IsolateGroup*) src/execution/isolate.cc:3907:10 (d8+0x9c8812) (BuildId: a7a0130d592b7ef3)
    #7 Allocate src/execution/isolate.cc:3847:40 (d8+0x9c63ac) (BuildId: a7a0130d592b7ef3)
    #8 v8::internal::Isolate::New() src/execution/isolate.cc:3837:34 (d8+0x9c63ac)
    #9 Allocate src/api/api.cc:9692:37 (d8+0x7663c7) (BuildId: a7a0130d592b7ef3)
    #10 v8::Isolate::New(v8::Isolate::CreateParams const&) src/api/api.cc:9798:25 (d8+0x7663c7)
    #11 v8::Shell::Main(int, char**) src/d8/d8.cc:6041:22 (d8+0x718704) (BuildId: a7a0130d592b7ef3)
    #12 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Thread T22 'IsolateThread' (tid=481287, running) created by main thread at:
    #0 pthread_create /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1023:3 (d8+0x65d441) (BuildId: a7a0130d592b7ef3)
    #1 v8::base::Thread::Start() src/base/platform/platform-posix.cc:1223:14 (d8+0x29e0029) (BuildId: a7a0130d592b7ef3)
    #2 StartExecuteInThread src/d8/d8.cc:4566:5 (d8+0x716d7f) (BuildId: a7a0130d592b7ef3)
    #3 v8::Shell::RunMain(v8::Isolate*, bool) src/d8/d8.cc:5293:32 (d8+0x716d7f)
    #4 v8::Shell::Main(int, char**) src/d8/d8.cc:6162:18 (d8+0x718dd5) (BuildId: a7a0130d592b7ef3)
    #5 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

SUMMARY: ThreadSanitizer: data race third_party/libc++/src/include/vector:951:38 in std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*)
==================
ThreadSanitizer: reported 1 warnings

Run #2
Exit code: 66 [0x42]
Result: FAIL
Expected outcomes: PASS
Duration: 01:11:704

Crash Type:
Data race
READ 8

Crash State:
std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*)
__clear
clear

Stderr:
==================
WARNING: ThreadSanitizer: data race (pid=497104)
  Read of size 8 at 0x725c000001d8 by thread T22 (mutexes: write M0):
    #0 std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*) third_party/libc++/src/include/vector:951:38 (d8+0x17957ac) (BuildId: a7a0130d592b7ef3)
    #1 __clear third_party/libc++/src/include/vector:947:5 (d8+0x1795714) (BuildId: a7a0130d592b7ef3)
    #2 clear third_party/libc++/src/include/vector:744:5 (d8+0x1795714)
    #3 v8::internal::wasm::StackPool::ReleaseFinishedStacks() src/wasm/stacks.cc:75:53 (d8+0x1795714)
    #4 v8::internal::Heap::GarbageCollectionEpilogueInSafepoint(v8::internal::GarbageCollector) src/heap/heap.cc:1272:43 (d8+0xaad44e) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*) src/heap/heap.cc:2419:3 (d8+0xab704a) (BuildId: a7a0130d592b7ef3)
    #6 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1::operator()() const src/heap/heap.cc:1764:9 (d8+0xad868b) (BuildId: a7a0130d592b7ef3)
    #7 void heap::base::Stack::SetMarkerAndCallbackImpl<v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1>(heap::base::Stack*, void*, void const*) src/heap/base/stack.h:176:5 (d8+0xad8119) (BuildId: a7a0130d592b7ef3)
    #8 PushAllRegistersAndIterateStack push_registers_asm.cc (d8+0x1996cf6) (BuildId: a7a0130d592b7ef3)
    #9 SetMarkerIfNeededAndCallback<(lambda at ../../src/heap/heap.cc:1728:40)> src/heap/base/stack.h:82:7 (d8+0xaaecc3) (BuildId: a7a0130d592b7ef3)
    #10 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) src/heap/heap.cc:1728:11 (d8+0xaaecc3)
    #11 CollectAllGarbage src/heap/heap.cc:1402:3 (d8+0xab1916) (BuildId: a7a0130d592b7ef3)
    #12 v8::internal::Heap::FinalizeIncrementalMarkingAtomically(v8::internal::GarbageCollectionReason) src/heap/heap.cc:3985:3 (d8+0xab1916)
    #13 v8::internal::IncrementalMarking::AdvanceAndFinalizeIfComplete() src/heap/incremental-marking.cc:706:13 (d8+0xae29b7) (BuildId: a7a0130d592b7ef3)
    #14 v8::internal::IncrementalMarkingJob::Task::RunInternal() src/heap/incremental-marking-job.cc:137:34 (d8+0xade12c) (BuildId: a7a0130d592b7ef3)
    #15 Run src/tasks/cancelable-task.h:155:7 (d8+0x720487) (BuildId: a7a0130d592b7ef3)
    #16 non-virtual thunk to v8::internal::CancelableTask::Run() src/tasks/cancelable-task.h (d8+0x720487)
    #17 v8::platform::DefaultPlatform::PumpMessageLoop(v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:173:9 (d8+0x29e1ff5) (BuildId: a7a0130d592b7ef3)
    #18 v8::platform::PumpMessageLoop(v8::Platform*, v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:81:51 (d8+0x29e1ea7) (BuildId: a7a0130d592b7ef3)
    #19 v8::(anonymous namespace)::ProcessMessages(v8::Isolate*, std::__Cr::function<v8::platform::MessageLoopBehavior ()> const&) src/d8/d8.cc:5439:9 (d8+0x7174df) (BuildId: a7a0130d592b7ef3)
    #20 CompleteMessageLoop src/d8/d8.cc:5492:10 (d8+0x71142b) (BuildId: a7a0130d592b7ef3)
    #21 v8::Shell::FinishExecuting(v8::Isolate*, v8::Global<v8::Context> const&) src/d8/d8.cc:5496:8 (d8+0x71142b)
    #22 v8::SourceGroup::ExecuteInThread() src/d8/d8.cc:4551:9 (d8+0x711e11) (BuildId: a7a0130d592b7ef3)
    #23 v8::SourceGroup::IsolateThread::Run() src/d8/d8.h:117:35 (d8+0x7196a3) (BuildId: a7a0130d592b7ef3)
    #24 NotifyStartedAndRun src/base/platform/platform.h:612:5 (d8+0x29e0139) (BuildId: a7a0130d592b7ef3)
    #25 v8::base::ThreadEntry(void*) src/base/platform/platform-posix.cc:1191:11 (d8+0x29e0139)

  Previous write of size 8 at 0x725c000001d8 by main thread (mutexes: write M1):
    #0 std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*) third_party/libc++/src/include/vector:954:18 (d8+0x1795878) (BuildId: a7a0130d592b7ef3)
    #1 __clear third_party/libc++/src/include/vector:947:5 (d8+0x1795714) (BuildId: a7a0130d592b7ef3)
    #2 clear third_party/libc++/src/include/vector:744:5 (d8+0x1795714)
    #3 v8::internal::wasm::StackPool::ReleaseFinishedStacks() src/wasm/stacks.cc:75:53 (d8+0x1795714)
    #4 v8::internal::Heap::GarbageCollectionEpilogueInSafepoint(v8::internal::GarbageCollector) src/heap/heap.cc:1272:43 (d8+0xaad44e) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*) src/heap/heap.cc:2419:3 (d8+0xab704a) (BuildId: a7a0130d592b7ef3)
    #6 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1::operator()() const src/heap/heap.cc:1764:9 (d8+0xad868b) (BuildId: a7a0130d592b7ef3)
    #7 void heap::base::Stack::SetMarkerAndCallbackImpl<v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1>(heap::base::Stack*, void*, void const*) src/heap/base/stack.h:176:5 (d8+0xad8119) (BuildId: a7a0130d592b7ef3)
    #8 PushAllRegistersAndIterateStack push_registers_asm.cc (d8+0x1996cf6) (BuildId: a7a0130d592b7ef3)
    #9 SetMarkerIfNeededAndCallback<(lambda at ../../src/heap/heap.cc:1728:40)> src/heap/base/stack.h:82:7 (d8+0xaaecc3) (BuildId: a7a0130d592b7ef3)
    #10 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) src/heap/heap.cc:1728:11 (d8+0xaaecc3)
    #11 CollectAllGarbage src/heap/heap.cc:1402:3 (d8+0xab1916) (BuildId: a7a0130d592b7ef3)
    #12 v8::internal::Heap::FinalizeIncrementalMarkingAtomically(v8::internal::GarbageCollectionReason) src/heap/heap.cc:3985:3 (d8+0xab1916)
    #13 v8::internal::IncrementalMarking::AdvanceAndFinalizeIfComplete() src/heap/incremental-marking.cc:706:13 (d8+0xae29b7) (BuildId: a7a0130d592b7ef3)
    #14 v8::internal::IncrementalMarkingJob::Task::RunInternal() src/heap/incremental-marking-job.cc:137:34 (d8+0xade12c) (BuildId: a7a0130d592b7ef3)
    #15 Run src/tasks/cancelable-task.h:155:7 (d8+0x720487) (BuildId: a7a0130d592b7ef3)
    #16 non-virtual thunk to v8::internal::CancelableTask::Run() src/tasks/cancelable-task.h (d8+0x720487)
    #17 v8::platform::DefaultPlatform::PumpMessageLoop(v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:173:9 (d8+0x29e1ff5) (BuildId: a7a0130d592b7ef3)
    #18 v8::platform::PumpMessageLoop(v8::Platform*, v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:81:51 (d8+0x29e1ea7) (BuildId: a7a0130d592b7ef3)
    #19 v8::(anonymous namespace)::ProcessMessages(v8::Isolate*, std::__Cr::function<v8::platform::MessageLoopBehavior ()> const&) src/d8/d8.cc:5439:9 (d8+0x7174df) (BuildId: a7a0130d592b7ef3)
    #20 CompleteMessageLoop src/d8/d8.cc:5492:10 (d8+0x71142b) (BuildId: a7a0130d592b7ef3)
    #21 v8::Shell::FinishExecuting(v8::Isolate*, v8::Global<v8::Context> const&) src/d8/d8.cc:5496:8 (d8+0x71142b)
    #22 v8::Shell::RunMainIsolate(v8::Isolate*, bool) src/d8/d8.cc:5394:8 (d8+0x7172c1) (BuildId: a7a0130d592b7ef3)
    #23 v8::Shell::RunMain(v8::Isolate*, bool) src/d8/d8.cc:5300:18 (d8+0x716e15) (BuildId: a7a0130d592b7ef3)
    #24 v8::Shell::Main(int, char**) src/d8/d8.cc:6162:18 (d8+0x718dd5) (BuildId: a7a0130d592b7ef3)
    #25 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Location is heap block of size 824 at 0x725c00000000 allocated by main thread:
    #0 operator new(unsigned long) /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_new_delete.cpp:64:3 (d8+0x6de0f2) (BuildId: a7a0130d592b7ef3)
    #1 v8::internal::wasm::WasmEngine::InitializeOncePerProcess() src/wasm/wasm-engine.cc:1968:23 (d8+0x188d5d8) (BuildId: a7a0130d592b7ef3)
    #2 v8::internal::V8::Initialize() src/init/v8.cc:239:3 (d8+0xc314f2) (BuildId: a7a0130d592b7ef3)
    #3 v8::V8::Initialize(int) src/api/api.cc:6422:3 (d8+0x759a49) (BuildId: a7a0130d592b7ef3)
    #4 Initialize include/v8-initialization.h:120:12 (d8+0x7183c5) (BuildId: a7a0130d592b7ef3)
    #5 v8::Shell::Main(int, char**) src/d8/d8.cc:5974:3 (d8+0x7183c5)
    #6 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Mutex M0 (0x7238000070a0) created at:
    #0 pthread_mutex_init /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1316:3 (d8+0x65edf3) (BuildId: a7a0130d592b7ef3)
    #1 InitializeRecursiveNativeHandle src/base/platform/mutex.cc:112:12 (d8+0x29d867a) (BuildId: a7a0130d592b7ef3)
    #2 v8::base::RecursiveMutex::RecursiveMutex() src/base/platform/mutex.cc:187:3 (d8+0x29d867a)
    #3 v8::internal::IsolateSafepoint::IsolateSafepoint(v8::internal::Heap*) src/heap/safepoint.cc:29:19 (d8+0xb8c528) (BuildId: a7a0130d592b7ef3)
    #4 make_unique<v8::internal::IsolateSafepoint, v8::internal::Heap *> third_party/libc++/src/include/__memory/unique_ptr.h:620:30 (d8+0xaa4c7d) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::Heap() src/heap/heap.cc:261:18 (d8+0xaa4c7d)
    #6 v8::internal::Isolate::Isolate(v8::internal::IsolateGroup*) src/execution/isolate.cc:3907:10 (d8+0x9c8812) (BuildId: a7a0130d592b7ef3)
    #7 Allocate src/execution/isolate.cc:3847:40 (d8+0x9c63ac) (BuildId: a7a0130d592b7ef3)
    #8 v8::internal::Isolate::New() src/execution/isolate.cc:3837:34 (d8+0x9c63ac)
    #9 Allocate src/api/api.cc:9692:37 (d8+0x7663c7) (BuildId: a7a0130d592b7ef3)
    #10 v8::Isolate::New(v8::Isolate::CreateParams const&) src/api/api.cc:9798:25 (d8+0x7663c7)
    #11 v8::SourceGroup::ExecuteInThread() src/d8/d8.cc:4518:22 (d8+0x711981) (BuildId: a7a0130d592b7ef3)
    #12 v8::SourceGroup::IsolateThread::Run() src/d8/d8.h:117:35 (d8+0x7196a3) (BuildId: a7a0130d592b7ef3)
    #13 NotifyStartedAndRun src/base/platform/platform.h:612:5 (d8+0x29e0139) (BuildId: a7a0130d592b7ef3)
    #14 v8::base::ThreadEntry(void*) src/base/platform/platform-posix.cc:1191:11 (d8+0x29e0139)

  Mutex M1 (0x7238000000a0) created at:
    #0 pthread_mutex_init /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1316:3 (d8+0x65edf3) (BuildId: a7a0130d592b7ef3)
    #1 InitializeRecursiveNativeHandle src/base/platform/mutex.cc:112:12 (d8+0x29d867a) (BuildId: a7a0130d592b7ef3)
    #2 v8::base::RecursiveMutex::RecursiveMutex() src/base/platform/mutex.cc:187:3 (d8+0x29d867a)
    #3 v8::internal::IsolateSafepoint::IsolateSafepoint(v8::internal::Heap*) src/heap/safepoint.cc:29:19 (d8+0xb8c528) (BuildId: a7a0130d592b7ef3)
    #4 make_unique<v8::internal::IsolateSafepoint, v8::internal::Heap *> third_party/libc++/src/include/__memory/unique_ptr.h:620:30 (d8+0xaa4c7d) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::Heap() src/heap/heap.cc:261:18 (d8+0xaa4c7d)
    #6 v8::internal::Isolate::Isolate(v8::internal::IsolateGroup*) src/execution/isolate.cc:3907:10 (d8+0x9c8812) (BuildId: a7a0130d592b7ef3)
    #7 Allocate src/execution/isolate.cc:3847:40 (d8+0x9c63ac) (BuildId: a7a0130d592b7ef3)
    #8 v8::internal::Isolate::New() src/execution/isolate.cc:3837:34 (d8+0x9c63ac)
    #9 Allocate src/api/api.cc:9692:37 (d8+0x7663c7) (BuildId: a7a0130d592b7ef3)
    #10 v8::Isolate::New(v8::Isolate::CreateParams const&) src/api/api.cc:9798:25 (d8+0x7663c7)
    #11 v8::Shell::Main(int, char**) src/d8/d8.cc:6041:22 (d8+0x718704) (BuildId: a7a0130d592b7ef3)
    #12 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Thread T22 'IsolateThread' (tid=497213, running) created by main thread at:
    #0 pthread_create /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1023:3 (d8+0x65d441) (BuildId: a7a0130d592b7ef3)
    #1 v8::base::Thread::Start() src/base/platform/platform-posix.cc:1223:14 (d8+0x29e0029) (BuildId: a7a0130d592b7ef3)
    #2 StartExecuteInThread src/d8/d8.cc:4566:5 (d8+0x716d7f) (BuildId: a7a0130d592b7ef3)
    #3 v8::Shell::RunMain(v8::Isolate*, bool) src/d8/d8.cc:5293:32 (d8+0x716d7f)
    #4 v8::Shell::Main(int, char**) src/d8/d8.cc:6162:18 (d8+0x718dd5) (BuildId: a7a0130d592b7ef3)
    #5 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

SUMMARY: ThreadSanitizer: data race third_party/libc++/src/include/vector:951:38 in std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*)
==================
ThreadSanitizer: reported 1 warnings

Run #3
Exit code: 66 [0x42]
Result: FAIL
Expected outcomes: PASS
Duration: 01:20:605

Crash Type:
Data race
READ 8

Crash State:
std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*)
__clear
clear

Stderr:
==================
WARNING: ThreadSanitizer: data race (pid=518517)
  Read of size 8 at 0x725c000001d8 by thread T22 (mutexes: write M0):
    #0 std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*) third_party/libc++/src/include/vector:951:38 (d8+0x17957ac) (BuildId: a7a0130d592b7ef3)
    #1 __clear third_party/libc++/src/include/vector:947:5 (d8+0x1795714) (BuildId: a7a0130d592b7ef3)
    #2 clear third_party/libc++/src/include/vector:744:5 (d8+0x1795714)
    #3 v8::internal::wasm::StackPool::ReleaseFinishedStacks() src/wasm/stacks.cc:75:53 (d8+0x1795714)
    #4 v8::internal::Heap::GarbageCollectionEpilogueInSafepoint(v8::internal::GarbageCollector) src/heap/heap.cc:1272:43 (d8+0xaad44e) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*) src/heap/heap.cc:2419:3 (d8+0xab704a) (BuildId: a7a0130d592b7ef3)
    #6 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1::operator()() const src/heap/heap.cc:1764:9 (d8+0xad868b) (BuildId: a7a0130d592b7ef3)
    #7 void heap::base::Stack::SetMarkerAndCallbackImpl<v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1>(heap::base::Stack*, void*, void const*) src/heap/base/stack.h:176:5 (d8+0xad8119) (BuildId: a7a0130d592b7ef3)
    #8 PushAllRegistersAndIterateStack push_registers_asm.cc (d8+0x1996cf6) (BuildId: a7a0130d592b7ef3)
    #9 SetMarkerIfNeededAndCallback<(lambda at ../../src/heap/heap.cc:1728:40)> src/heap/base/stack.h:82:7 (d8+0xaaecc3) (BuildId: a7a0130d592b7ef3)
    #10 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) src/heap/heap.cc:1728:11 (d8+0xaaecc3)
    #11 CollectAllGarbage src/heap/heap.cc:1402:3 (d8+0xab1916) (BuildId: a7a0130d592b7ef3)
    #12 v8::internal::Heap::FinalizeIncrementalMarkingAtomically(v8::internal::GarbageCollectionReason) src/heap/heap.cc:3985:3 (d8+0xab1916)
    #13 v8::internal::IncrementalMarking::AdvanceAndFinalizeIfComplete() src/heap/incremental-marking.cc:706:13 (d8+0xae29b7) (BuildId: a7a0130d592b7ef3)
    #14 v8::internal::IncrementalMarkingJob::Task::RunInternal() src/heap/incremental-marking-job.cc:137:34 (d8+0xade12c) (BuildId: a7a0130d592b7ef3)
    #15 Run src/tasks/cancelable-task.h:155:7 (d8+0x720487) (BuildId: a7a0130d592b7ef3)
    #16 non-virtual thunk to v8::internal::CancelableTask::Run() src/tasks/cancelable-task.h (d8+0x720487)
    #17 v8::platform::DefaultPlatform::PumpMessageLoop(v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:173:9 (d8+0x29e1ff5) (BuildId: a7a0130d592b7ef3)
    #18 v8::platform::PumpMessageLoop(v8::Platform*, v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:81:51 (d8+0x29e1ea7) (BuildId: a7a0130d592b7ef3)
    #19 v8::(anonymous namespace)::ProcessMessages(v8::Isolate*, std::__Cr::function<v8::platform::MessageLoopBehavior ()> const&) src/d8/d8.cc:5439:9 (d8+0x7174df) (BuildId: a7a0130d592b7ef3)
    #20 CompleteMessageLoop src/d8/d8.cc:5492:10 (d8+0x71142b) (BuildId: a7a0130d592b7ef3)
    #21 v8::Shell::FinishExecuting(v8::Isolate*, v8::Global<v8::Context> const&) src/d8/d8.cc:5496:8 (d8+0x71142b)
    #22 v8::SourceGroup::ExecuteInThread() src/d8/d8.cc:4551:9 (d8+0x711e11) (BuildId: a7a0130d592b7ef3)
    #23 v8::SourceGroup::IsolateThread::Run() src/d8/d8.h:117:35 (d8+0x7196a3) (BuildId: a7a0130d592b7ef3)
    #24 NotifyStartedAndRun src/base/platform/platform.h:612:5 (d8+0x29e0139) (BuildId: a7a0130d592b7ef3)
    #25 v8::base::ThreadEntry(void*) src/base/platform/platform-posix.cc:1191:11 (d8+0x29e0139)

  Previous write of size 8 at 0x725c000001d8 by main thread (mutexes: write M1):
    #0 std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*) third_party/libc++/src/include/vector:954:18 (d8+0x1795878) (BuildId: a7a0130d592b7ef3)
    #1 __clear third_party/libc++/src/include/vector:947:5 (d8+0x1795714) (BuildId: a7a0130d592b7ef3)
    #2 clear third_party/libc++/src/include/vector:744:5 (d8+0x1795714)
    #3 v8::internal::wasm::StackPool::ReleaseFinishedStacks() src/wasm/stacks.cc:75:53 (d8+0x1795714)
    #4 v8::internal::Heap::GarbageCollectionEpilogueInSafepoint(v8::internal::GarbageCollector) src/heap/heap.cc:1272:43 (d8+0xaad44e) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*) src/heap/heap.cc:2419:3 (d8+0xab704a) (BuildId: a7a0130d592b7ef3)
    #6 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1::operator()() const src/heap/heap.cc:1764:9 (d8+0xad868b) (BuildId: a7a0130d592b7ef3)
    #7 void heap::base::Stack::SetMarkerAndCallbackImpl<v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags)::$_1>(heap::base::Stack*, void*, void const*) src/heap/base/stack.h:176:5 (d8+0xad8119) (BuildId: a7a0130d592b7ef3)
    #8 PushAllRegistersAndIterateStack push_registers_asm.cc (d8+0x1996cf6) (BuildId: a7a0130d592b7ef3)
    #9 SetMarkerIfNeededAndCallback<(lambda at ../../src/heap/heap.cc:1728:40)> src/heap/base/stack.h:82:7 (d8+0xaaecc3) (BuildId: a7a0130d592b7ef3)
    #10 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) src/heap/heap.cc:1728:11 (d8+0xaaecc3)
    #11 CollectAllGarbage src/heap/heap.cc:1402:3 (d8+0xab1916) (BuildId: a7a0130d592b7ef3)
    #12 v8::internal::Heap::FinalizeIncrementalMarkingAtomically(v8::internal::GarbageCollectionReason) src/heap/heap.cc:3985:3 (d8+0xab1916)
    #13 v8::internal::IncrementalMarking::AdvanceAndFinalizeIfComplete() src/heap/incremental-marking.cc:706:13 (d8+0xae29b7) (BuildId: a7a0130d592b7ef3)
    #14 v8::internal::IncrementalMarkingJob::Task::RunInternal() src/heap/incremental-marking-job.cc:137:34 (d8+0xade12c) (BuildId: a7a0130d592b7ef3)
    #15 Run src/tasks/cancelable-task.h:155:7 (d8+0x720487) (BuildId: a7a0130d592b7ef3)
    #16 non-virtual thunk to v8::internal::CancelableTask::Run() src/tasks/cancelable-task.h (d8+0x720487)
    #17 v8::platform::DefaultPlatform::PumpMessageLoop(v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:173:9 (d8+0x29e1ff5) (BuildId: a7a0130d592b7ef3)
    #18 v8::platform::PumpMessageLoop(v8::Platform*, v8::Isolate*, v8::platform::MessageLoopBehavior) src/libplatform/default-platform.cc:81:51 (d8+0x29e1ea7) (BuildId: a7a0130d592b7ef3)
    #19 v8::(anonymous namespace)::ProcessMessages(v8::Isolate*, std::__Cr::function<v8::platform::MessageLoopBehavior ()> const&) src/d8/d8.cc:5439:9 (d8+0x7174df) (BuildId: a7a0130d592b7ef3)
    #20 CompleteMessageLoop src/d8/d8.cc:5492:10 (d8+0x71142b) (BuildId: a7a0130d592b7ef3)
    #21 v8::Shell::FinishExecuting(v8::Isolate*, v8::Global<v8::Context> const&) src/d8/d8.cc:5496:8 (d8+0x71142b)
    #22 v8::Shell::RunMainIsolate(v8::Isolate*, bool) src/d8/d8.cc:5394:8 (d8+0x7172c1) (BuildId: a7a0130d592b7ef3)
    #23 v8::Shell::RunMain(v8::Isolate*, bool) src/d8/d8.cc:5300:18 (d8+0x716e15) (BuildId: a7a0130d592b7ef3)
    #24 v8::Shell::Main(int, char**) src/d8/d8.cc:6162:18 (d8+0x718dd5) (BuildId: a7a0130d592b7ef3)
    #25 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Location is heap block of size 824 at 0x725c00000000 allocated by main thread:
    #0 operator new(unsigned long) /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_new_delete.cpp:64:3 (d8+0x6de0f2) (BuildId: a7a0130d592b7ef3)
    #1 v8::internal::wasm::WasmEngine::InitializeOncePerProcess() src/wasm/wasm-engine.cc:1968:23 (d8+0x188d5d8) (BuildId: a7a0130d592b7ef3)
    #2 v8::internal::V8::Initialize() src/init/v8.cc:239:3 (d8+0xc314f2) (BuildId: a7a0130d592b7ef3)
    #3 v8::V8::Initialize(int) src/api/api.cc:6422:3 (d8+0x759a49) (BuildId: a7a0130d592b7ef3)
    #4 Initialize include/v8-initialization.h:120:12 (d8+0x7183c5) (BuildId: a7a0130d592b7ef3)
    #5 v8::Shell::Main(int, char**) src/d8/d8.cc:5974:3 (d8+0x7183c5)
    #6 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Mutex M0 (0x7238000070a0) created at:
    #0 pthread_mutex_init /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1316:3 (d8+0x65edf3) (BuildId: a7a0130d592b7ef3)
    #1 InitializeRecursiveNativeHandle src/base/platform/mutex.cc:112:12 (d8+0x29d867a) (BuildId: a7a0130d592b7ef3)
    #2 v8::base::RecursiveMutex::RecursiveMutex() src/base/platform/mutex.cc:187:3 (d8+0x29d867a)
    #3 v8::internal::IsolateSafepoint::IsolateSafepoint(v8::internal::Heap*) src/heap/safepoint.cc:29:19 (d8+0xb8c528) (BuildId: a7a0130d592b7ef3)
    #4 make_unique<v8::internal::IsolateSafepoint, v8::internal::Heap *> third_party/libc++/src/include/__memory/unique_ptr.h:620:30 (d8+0xaa4c7d) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::Heap() src/heap/heap.cc:261:18 (d8+0xaa4c7d)
    #6 v8::internal::Isolate::Isolate(v8::internal::IsolateGroup*) src/execution/isolate.cc:3907:10 (d8+0x9c8812) (BuildId: a7a0130d592b7ef3)
    #7 Allocate src/execution/isolate.cc:3847:40 (d8+0x9c63ac) (BuildId: a7a0130d592b7ef3)
    #8 v8::internal::Isolate::New() src/execution/isolate.cc:3837:34 (d8+0x9c63ac)
    #9 Allocate src/api/api.cc:9692:37 (d8+0x7663c7) (BuildId: a7a0130d592b7ef3)
    #10 v8::Isolate::New(v8::Isolate::CreateParams const&) src/api/api.cc:9798:25 (d8+0x7663c7)
    #11 v8::SourceGroup::ExecuteInThread() src/d8/d8.cc:4518:22 (d8+0x711981) (BuildId: a7a0130d592b7ef3)
    #12 v8::SourceGroup::IsolateThread::Run() src/d8/d8.h:117:35 (d8+0x7196a3) (BuildId: a7a0130d592b7ef3)
    #13 NotifyStartedAndRun src/base/platform/platform.h:612:5 (d8+0x29e0139) (BuildId: a7a0130d592b7ef3)
    #14 v8::base::ThreadEntry(void*) src/base/platform/platform-posix.cc:1191:11 (d8+0x29e0139)

  Mutex M1 (0x7238000000a0) created at:
    #0 pthread_mutex_init /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1316:3 (d8+0x65edf3) (BuildId: a7a0130d592b7ef3)
    #1 InitializeRecursiveNativeHandle src/base/platform/mutex.cc:112:12 (d8+0x29d867a) (BuildId: a7a0130d592b7ef3)
    #2 v8::base::RecursiveMutex::RecursiveMutex() src/base/platform/mutex.cc:187:3 (d8+0x29d867a)
    #3 v8::internal::IsolateSafepoint::IsolateSafepoint(v8::internal::Heap*) src/heap/safepoint.cc:29:19 (d8+0xb8c528) (BuildId: a7a0130d592b7ef3)
    #4 make_unique<v8::internal::IsolateSafepoint, v8::internal::Heap *> third_party/libc++/src/include/__memory/unique_ptr.h:620:30 (d8+0xaa4c7d) (BuildId: a7a0130d592b7ef3)
    #5 v8::internal::Heap::Heap() src/heap/heap.cc:261:18 (d8+0xaa4c7d)
    #6 v8::internal::Isolate::Isolate(v8::internal::IsolateGroup*) src/execution/isolate.cc:3907:10 (d8+0x9c8812) (BuildId: a7a0130d592b7ef3)
    #7 Allocate src/execution/isolate.cc:3847:40 (d8+0x9c63ac) (BuildId: a7a0130d592b7ef3)
    #8 v8::internal::Isolate::New() src/execution/isolate.cc:3837:34 (d8+0x9c63ac)
    #9 Allocate src/api/api.cc:9692:37 (d8+0x7663c7) (BuildId: a7a0130d592b7ef3)
    #10 v8::Isolate::New(v8::Isolate::CreateParams const&) src/api/api.cc:9798:25 (d8+0x7663c7)
    #11 v8::Shell::Main(int, char**) src/d8/d8.cc:6041:22 (d8+0x718704) (BuildId: a7a0130d592b7ef3)
    #12 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

  Thread T22 'IsolateThread' (tid=518625, running) created by main thread at:
    #0 pthread_create /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/tsan/rtl/tsan_interceptors_posix.cpp:1023:3 (d8+0x65d441) (BuildId: a7a0130d592b7ef3)
    #1 v8::base::Thread::Start() src/base/platform/platform-posix.cc:1223:14 (d8+0x29e0029) (BuildId: a7a0130d592b7ef3)
    #2 StartExecuteInThread src/d8/d8.cc:4566:5 (d8+0x716d7f) (BuildId: a7a0130d592b7ef3)
    #3 v8::Shell::RunMain(v8::Isolate*, bool) src/d8/d8.cc:5293:32 (d8+0x716d7f)
    #4 v8::Shell::Main(int, char**) src/d8/d8.cc:6162:18 (d8+0x718dd5) (BuildId: a7a0130d592b7ef3)
    #5 main src/d8/d8.cc:6254:43 (d8+0x719530) (BuildId: a7a0130d592b7ef3)

SUMMARY: ThreadSanitizer: data race third_party/libc++/src/include/vector:951:38 in std::__Cr::vector<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>, std::__Cr::allocator<std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>>>::__base_destruct_at_end(std::__Cr::unique_ptr<v8::internal::wasm::StackMemory, std::__Cr::default_delete<v8::internal::wasm::StackMemory>>*)
==================
ThreadSanitizer: reported 1 warnings

